{% extends 'base.html.twig' %}

{% block title %}Statistiques des dépenses pour {{ category.name }}{% endblock %}

{% block content %}
    <h1>Statistiques des dépenses pour {{ category.name }}</h1>
    <div style="width: 80%; margin: auto;">
        <canvas id="expenseChart"></canvas>
    </div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.7.0/chart.min.js"></script>
    <script>
    // Récupérer les données des dépenses et les labels depuis le contrôleur
    const expensesData = {{ expenseStats|json_encode|raw }};
    const labels1 = [];
    const data = [];

    // Parcourir les données pour extraire les noms de sous-catégories et les montants dépensés
    expensesData.forEach(function(item) {
        labels1.push(item.name);
        data.push(item.mtdepense);
    });

    // Créer un graphique circulaire (pie chart) avec Chart.js
    const ctx = document.getElementById('expenseChart').getContext('2d');
    const expenseChart = new Chart(ctx, {
        type: 'pie',
        data: {
            labels: labels1,
            datasets: [{
                label: 'Dépenses par sous-catégorie',
                data: data,
                backgroundColor: [
                    'rgba(255, 99, 132, 0.6)',
                    'rgba(54, 162, 235, 0.6)',
                    'rgba(255, 206, 86, 0.6)',
                    'rgba(75, 192, 192, 0.6)',
                    'rgba(153, 102, 255, 0.6)',
                    'rgba(255, 159, 64, 0.6)'
                ],
                borderColor: [
                    'rgba(255, 99, 132, 1)',
                    'rgba(54, 162, 235, 1)',
                    'rgba(255, 206, 86, 1)',
                    'rgba(75, 192, 192, 1)',
                    'rgba(153, 102, 255, 1)',
                    'rgba(255, 159, 64, 1)'
                ],
                borderWidth: 1
            }]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false
        }
    });
</script>

{% endblock %}
